# Generated by Django 4.2.23 on 2025-01-27 00:00

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('applications', '0001_initial_consolidated'),
        ('users', '0001_initial_consolidated'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('meeting_type', models.CharField(choices=[('interview', 'Entrevista'), ('meeting', 'Reuni√≥n'), ('workshop', 'Taller'), ('other', 'Otro')], default='meeting', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('urgent', 'Urgente')], default='medium', max_length=20)),
                ('is_all_day', models.BooleanField(default=False)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_pattern', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calendar_events', to='applications.aplicacion')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to='users.user')),
                ('attendees', models.ManyToManyField(blank=True, related_name='attending_events', to='users.user')),
            ],
            options={
                'verbose_name': 'Evento de Calendario',
                'verbose_name_plural': 'Eventos de Calendario',
                'db_table': 'calendar_events',
                'ordering': ['start_time'],
            },
        ),
    ]
