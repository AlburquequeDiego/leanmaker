# Generated by Django 4.2.7 on 2025-09-09 23:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("companies", "0001_initial"),
        ("areas", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DesafioColectivo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Título del desafío colectivo", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Descripción detallada del desafío"),
                ),
                (
                    "requirements",
                    models.TextField(
                        help_text="Requisitos y especificaciones técnicas"
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("trimestral", "Trimestral"),
                            ("semestral", "Semestral"),
                            ("anual", "Anual"),
                        ],
                        default="trimestral",
                        help_text="Tipo de período académico",
                        max_length=20,
                    ),
                ),
                (
                    "academic_year",
                    models.CharField(
                        help_text="Año académico (ej: 2024-1, 2024-2)", max_length=10
                    ),
                ),
                (
                    "semester",
                    models.CharField(help_text="Semestre académico", max_length=50),
                ),
                (
                    "tipo",
                    models.CharField(
                        blank=True,
                        help_text="Tipo de actividad del desafío",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "objetivo",
                    models.TextField(
                        blank=True,
                        help_text="Objetivo principal del desafío",
                        null=True,
                    ),
                ),
                (
                    "encargado",
                    models.CharField(
                        blank=True,
                        help_text="Responsable del desafío en la empresa",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "contacto",
                    models.CharField(
                        blank=True,
                        help_text="Contacto de la empresa para el desafío",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "max_teams",
                    models.IntegerField(
                        default=5,
                        help_text="Máximo número de equipos que pueden participar",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(20),
                        ],
                    ),
                ),
                (
                    "students_per_team",
                    models.IntegerField(
                        default=3,
                        help_text="Número de estudiantes por equipo",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "total_students_needed",
                    models.IntegerField(
                        default=15,
                        help_text="Total de estudiantes necesarios",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "current_teams",
                    models.IntegerField(
                        default=0,
                        help_text="Número actual de equipos registrados",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "modality",
                    models.CharField(
                        choices=[
                            ("remote", "Remoto"),
                            ("onsite", "Presencial"),
                            ("hybrid", "Híbrido"),
                        ],
                        default="remote",
                        help_text="Modalidad de trabajo",
                        max_length=20,
                    ),
                ),
                (
                    "duration_weeks",
                    models.IntegerField(
                        default=12,
                        help_text="Duración del desafío en semanas",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(52),
                        ],
                    ),
                ),
                (
                    "hours_per_week",
                    models.IntegerField(
                        default=20,
                        help_text="Horas por semana por estudiante",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(40),
                        ],
                    ),
                ),
                (
                    "total_hours",
                    models.IntegerField(
                        default=240,
                        help_text="Total de horas del desafío",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "registration_start",
                    models.DateField(help_text="Fecha de inicio de inscripciones"),
                ),
                (
                    "registration_end",
                    models.DateField(help_text="Fecha de fin de inscripciones"),
                ),
                (
                    "challenge_start",
                    models.DateField(help_text="Fecha de inicio del desafío"),
                ),
                (
                    "challenge_end",
                    models.DateField(help_text="Fecha de fin del desafío"),
                ),
                (
                    "evaluation_criteria",
                    models.TextField(
                        blank=True,
                        help_text="Criterios de evaluación (JSON)",
                        null=True,
                    ),
                ),
                (
                    "prizes",
                    models.TextField(
                        blank=True,
                        help_text="Premios y reconocimientos (JSON)",
                        null=True,
                    ),
                ),
                (
                    "judges",
                    models.TextField(
                        blank=True, help_text="Jueces y evaluadores (JSON)", null=True
                    ),
                ),
                (
                    "required_skills",
                    models.TextField(
                        blank=True,
                        help_text="Habilidades requeridas (JSON array)",
                        null=True,
                    ),
                ),
                (
                    "preferred_skills",
                    models.TextField(
                        blank=True,
                        help_text="Habilidades preferidas (JSON array)",
                        null=True,
                    ),
                ),
                (
                    "technologies",
                    models.TextField(
                        blank=True,
                        help_text="Tecnologías a utilizar (JSON array)",
                        null=True,
                    ),
                ),
                (
                    "benefits",
                    models.TextField(
                        blank=True,
                        help_text="Beneficios para los participantes (JSON array)",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Borrador"),
                            ("published", "Publicado"),
                            ("active", "Activo"),
                            ("completed", "Completado"),
                            ("cancelled", "Cancelado"),
                        ],
                        default="draft",
                        help_text="Estado actual del desafío",
                        max_length=20,
                    ),
                ),
                (
                    "applications_count",
                    models.IntegerField(
                        default=0, help_text="Número de aplicaciones recibidas"
                    ),
                ),
                (
                    "views_count",
                    models.IntegerField(
                        default=0, help_text="Número de visualizaciones"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Si el desafío está destacado"
                    ),
                ),
                (
                    "is_urgent",
                    models.BooleanField(
                        default=False, help_text="Si el desafío es urgente"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Si el desafío está activo"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "area",
                    models.ForeignKey(
                        blank=True,
                        help_text="Área temática del desafío",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="desafios_colectivos",
                        to="areas.area",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Empresa que publica el desafío",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="desafios_colectivos",
                        to="companies.empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Desafío Colectivo",
                "verbose_name_plural": "Desafíos Colectivos",
                "db_table": "collective_challenges",
                "ordering": ["-created_at"],
            },
        ),
    ]
