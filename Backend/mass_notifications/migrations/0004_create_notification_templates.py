# Generated by Django 4.2.23 on 2025-07-02 01:37

from django.db import migrations


def create_notification_templates(apps, schema_editor):
    """Crear plantillas de notificación iniciales"""
    NotificationTemplate = apps.get_model('mass_notifications', 'NotificationTemplate')
    
    # Plantillas de notificación
    templates = [
        {
            'name': 'Bienvenida a Estudiantes',
            'notification_type': 'announcement',
            'title_template': '¡Bienvenido a LeanMaker!',
            'message_template': 'Hola {nombre}, te damos la bienvenida a LeanMaker. Aquí podrás encontrar proyectos interesantes y desarrollar tus habilidades profesionales. ¡Explora las oportunidades disponibles!'
        },
        {
            'name': 'Bienvenida a Empresas',
            'notification_type': 'announcement',
            'title_template': '¡Bienvenido a LeanMaker!',
            'message_template': 'Hola {nombre}, te damos la bienvenida a LeanMaker. Aquí podrás publicar proyectos y encontrar estudiantes talentosos para colaborar en tus iniciativas de innovación.'
        },
        {
            'name': 'Nuevo Proyecto Disponible',
            'notification_type': 'announcement',
            'title_template': 'Nuevo proyecto disponible: {titulo_proyecto}',
            'message_template': 'Se ha publicado un nuevo proyecto que podría interesarte: {titulo_proyecto}. Revisa los detalles y postula si te interesa participar.'
        },
        {
            'name': 'Recordatorio de Fecha Límite',
            'notification_type': 'reminder',
            'title_template': 'Recordatorio: Fecha límite próxima',
            'message_template': 'Hola {nombre}, te recordamos que tienes una fecha límite próxima para el proyecto {titulo_proyecto}. Asegúrate de completar tus tareas a tiempo.'
        },
        {
            'name': 'Proyecto Asignado',
            'notification_type': 'announcement',
            'title_template': '¡Proyecto asignado exitosamente!',
            'message_template': 'Felicitaciones {nombre}, has sido asignado al proyecto {titulo_proyecto}. Contacta con la empresa para coordinar los próximos pasos.'
        },
        {
            'name': 'Mantenimiento de Plataforma',
            'notification_type': 'alert',
            'title_template': 'Mantenimiento programado',
            'message_template': 'Estimado usuario, informamos que la plataforma estará en mantenimiento el {fecha} de {hora_inicio} a {hora_fin}. Durante este período, algunos servicios podrían no estar disponibles.'
        },
        {
            'name': 'Actualización de Sistema',
            'notification_type': 'update',
            'title_template': 'Nueva actualización disponible',
            'message_template': 'Hemos lanzado una nueva actualización de la plataforma con mejoras en la funcionalidad y experiencia de usuario. ¡Explora las nuevas características!'
        },
        {
            'name': 'Evento Próximo',
            'notification_type': 'event',
            'title_template': 'Evento próximo: {titulo_evento}',
            'message_template': 'Te invitamos a participar en {titulo_evento} que se realizará el {fecha} a las {hora}. ¡No te lo pierdas!'
        }
    ]
    
    for template_data in templates:
        NotificationTemplate.objects.create(**template_data)


def reverse_create_notification_templates(apps, schema_editor):
    """Eliminar las plantillas de notificación iniciales"""
    NotificationTemplate = apps.get_model('mass_notifications', 'NotificationTemplate')
    NotificationTemplate.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('mass_notifications', '0003_alter_massnotification_priority'),
    ]

    operations = [
        migrations.RunPython(create_notification_templates, reverse_create_notification_templates),
    ]
