# Generated by Django 4.2.23 on 2025-07-02 01:37

from django.db import migrations, models


def create_initial_notification_templates(apps, schema_editor):
    """Crear plantillas de notificación iniciales"""
    NotificationTemplate = apps.get_model('mass_notifications', 'NotificationTemplate')
    
    # Plantillas de notificación
    templates = [
        {
            'name': 'Bienvenida a Estudiantes',
            'notification_type': 'announcement',
            'title_template': '¡Bienvenido a LeanMaker!',
            'message_template': 'Hola {nombre}, te damos la bienvenida a LeanMaker. Aquí podrás encontrar proyectos interesantes y desarrollar tus habilidades profesionales. ¡Explora las oportunidades disponibles!'
        },
        {
            'name': 'Bienvenida a Empresas',
            'notification_type': 'announcement',
            'title_template': '¡Bienvenido a LeanMaker!',
            'message_template': 'Hola {nombre}, te damos la bienvenida a LeanMaker. Aquí podrás publicar proyectos y encontrar estudiantes talentosos para colaborar en tus iniciativas de innovación.'
        },
        {
            'name': 'Nuevo Proyecto Disponible',
            'notification_type': 'announcement',
            'title_template': 'Nuevo proyecto disponible: {titulo_proyecto}',
            'message_template': 'Se ha publicado un nuevo proyecto que podría interesarte: {titulo_proyecto}. Revisa los detalles y postula si te interesa participar.'
        },
        {
            'name': 'Recordatorio de Fecha Límite',
            'notification_type': 'reminder',
            'title_template': 'Recordatorio: Fecha límite próxima',
            'message_template': 'Hola {nombre}, te recordamos que tienes una fecha límite próxima para el proyecto {titulo_proyecto}. Asegúrate de completar tus tareas a tiempo.'
        },
        {
            'name': 'Proyecto Asignado',
            'notification_type': 'announcement',
            'title_template': '¡Proyecto asignado exitosamente!',
            'message_template': 'Felicitaciones {nombre}, has sido asignado al proyecto {titulo_proyecto}. Contacta con la empresa para coordinar los próximos pasos.'
        },
        {
            'name': 'Mantenimiento de Plataforma',
            'notification_type': 'alert',
            'title_template': 'Mantenimiento programado',
            'message_template': 'Estimado usuario, informamos que la plataforma estará en mantenimiento el {fecha} de {hora_inicio} a {hora_fin}. Durante este período, algunos servicios podrían no estar disponibles.'
        },
        {
            'name': 'Actualización de Sistema',
            'notification_type': 'update',
            'title_template': 'Nueva actualización disponible',
            'message_template': 'Hemos lanzado una nueva actualización de la plataforma con mejoras en la funcionalidad y experiencia de usuario. ¡Explora las nuevas características!'
        },
        {
            'name': 'Evento Próximo',
            'notification_type': 'event',
            'title_template': 'Evento próximo: {titulo_evento}',
            'message_template': 'Te invitamos a participar en {titulo_evento} que se realizará el {fecha} a las {hora}. ¡No te lo pierdas!'
        }
    ]
    
    for template_data in templates:
        NotificationTemplate.objects.create(**template_data)


def reverse_create_initial_notification_templates(apps, schema_editor):
    """Eliminar las plantillas de notificación iniciales"""
    NotificationTemplate = apps.get_model('mass_notifications', 'NotificationTemplate')
    NotificationTemplate.objects.all().delete()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MassNotification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Título de la notificación', max_length=200)),
                ('message', models.TextField(help_text='Contenido de la notificación')),
                ('notification_type', models.CharField(choices=[('announcement', 'Anuncio'), ('reminder', 'Recordatorio'), ('alert', 'Alerta'), ('update', 'Actualización'), ('event', 'Evento'), ('deadline', 'Fecha límite')], default='announcement', help_text='Tipo de notificación', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('normal', 'Normal'), ('high', 'Alta'), ('urgent', 'Urgente')], default='normal', help_text='Prioridad de la notificación', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('scheduled', 'Programada'), ('sending', 'Enviando'), ('sent', 'Enviada'), ('cancelled', 'Cancelada'), ('failed', 'Fallida')], default='draft', help_text='Estado de la notificación', max_length=20)),
                ('target_all_students', models.BooleanField(default=False, help_text='Enviar a todos los estudiantes')),
                ('target_all_companies', models.BooleanField(default=False, help_text='Enviar a todas las empresas')),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='Fecha y hora programada para el envío', null=True)),
                ('sent_at', models.DateTimeField(blank=True, help_text='Fecha y hora cuando se envió', null=True)),
                ('total_recipients', models.IntegerField(default=0, help_text='Total de destinatarios')),
                ('sent_count', models.IntegerField(default=0, help_text='Número de notificaciones enviadas')),
                ('failed_count', models.IntegerField(default=0, help_text='Número de notificaciones fallidas')),
                ('read_count', models.IntegerField(default=0, help_text='Número de notificaciones leídas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notificación Masiva',
                'verbose_name_plural': 'Notificaciones Masivas',
                'db_table': 'mass_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('notification_type', models.CharField(default='announcement', max_length=30)),
                ('title_template', models.CharField(max_length=200)),
                ('message_template', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plantilla de Notificación Masiva',
                'verbose_name_plural': 'Plantillas de Notificaciones Masivas',
                'db_table': 'notification_templates_mass',
                'ordering': ['-created_at'],
            },
        ),
        # Agregar los datos iniciales
        migrations.RunPython(create_initial_notification_templates, reverse_create_initial_notification_templates),
    ]
