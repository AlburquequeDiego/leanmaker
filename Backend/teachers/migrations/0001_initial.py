# Generated by Django 4.2.7 on 2025-09-09 02:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("students", "0001_initial"),
        ("projects", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TeacherSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "day_of_week",
                    models.CharField(
                        choices=[
                            ("monday", "Lunes"),
                            ("tuesday", "Martes"),
                            ("wednesday", "Miércoles"),
                            ("thursday", "Jueves"),
                            ("friday", "Viernes"),
                            ("saturday", "Sábado"),
                            ("sunday", "Domingo"),
                        ],
                        max_length=10,
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("office_hours", "Horas de Oficina"),
                            ("meeting", "Reunión"),
                            ("class", "Clase"),
                            ("supervision", "Supervisión"),
                            ("research", "Investigación"),
                            ("unavailable", "No Disponible"),
                        ],
                        default="office_hours",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=200, null=True)),
                ("is_recurring", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("specific_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "teacher",
                    models.ForeignKey(
                        limit_choices_to={"role": "teacher"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_schedule",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Horario de Docente",
                "verbose_name_plural": "Horarios de Docente",
                "db_table": "teacher_schedule",
                "ordering": ["day_of_week", "start_time"],
            },
        ),
        migrations.CreateModel(
            name="TeacherReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("student_progress", "Progreso del Estudiante"),
                            ("project_status", "Estado del Proyecto"),
                            ("academic_performance", "Rendimiento Académico"),
                            ("supervision_summary", "Resumen de Supervisión"),
                            ("evaluation_summary", "Resumen de Evaluaciones"),
                            ("custom", "Reporte Personalizado"),
                        ],
                        default="custom",
                        max_length=30,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Borrador"),
                            ("generated", "Generado"),
                            ("published", "Publicado"),
                            ("archived", "Archivado"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("content", models.TextField()),
                ("summary", models.TextField(blank=True, null=True)),
                ("date_from", models.DateField(blank=True, null=True)),
                ("date_to", models.DateField(blank=True, null=True)),
                ("parameters", models.TextField(blank=True, null=True)),
                ("file_path", models.CharField(blank=True, max_length=500, null=True)),
                ("generated_date", models.DateTimeField(auto_now_add=True)),
                ("published_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project_filter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="teacher_reports",
                        to="projects.proyecto",
                    ),
                ),
                (
                    "student_filter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="teacher_reports",
                        to="students.estudiante",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        limit_choices_to={"role": "teacher"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Reporte de Docente",
                "verbose_name_plural": "Reportes de Docente",
                "db_table": "teacher_reports",
                "ordering": ["-generated_date"],
            },
        ),
        migrations.CreateModel(
            name="TeacherEvaluation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "evaluation_type",
                    models.CharField(
                        choices=[
                            ("progress", "Evaluación de Progreso"),
                            ("midterm", "Evaluación Intermedia"),
                            ("final", "Evaluación Final"),
                            ("peer_review", "Revisión por Pares"),
                            ("self_assessment", "Autoevaluación"),
                        ],
                        default="progress",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Borrador"),
                            ("in_progress", "En Progreso"),
                            ("completed", "Completada"),
                            ("published", "Publicada"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "technical_skills",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "communication",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "problem_solving",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "teamwork",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "punctuality",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "overall_score",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("strengths", models.TextField(blank=True, null=True)),
                ("areas_for_improvement", models.TextField(blank=True, null=True)),
                ("general_comments", models.TextField(blank=True, null=True)),
                ("recommendations", models.TextField(blank=True, null=True)),
                ("evaluation_date", models.DateField(auto_now_add=True)),
                ("due_date", models.DateField(blank=True, null=True)),
                ("completed_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_evaluations",
                        to="projects.proyecto",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_evaluations_received",
                        to="students.estudiante",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        limit_choices_to={"role": "teacher"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_evaluations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Evaluación de Docente",
                "verbose_name_plural": "Evaluaciones de Docente",
                "db_table": "teacher_evaluations",
                "ordering": ["-evaluation_date"],
            },
        ),
        migrations.CreateModel(
            name="TeacherStudent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "supervision_type",
                    models.CharField(
                        choices=[
                            ("thesis", "Tesis"),
                            ("internship", "Práctica"),
                            ("project", "Proyecto"),
                            ("course", "Curso"),
                            ("mentoring", "Mentoría"),
                        ],
                        default="project",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Activo"),
                            ("completed", "Completado"),
                            ("suspended", "Suspendido"),
                            ("transferred", "Transferido"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("expected_completion_date", models.DateField(blank=True, null=True)),
                (
                    "total_hours_supervised",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=8,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("meetings_count", models.PositiveIntegerField(default=0)),
                ("evaluations_count", models.PositiveIntegerField(default=0)),
                ("notes", models.TextField(blank=True, null=True)),
                ("objectives", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supervising_teachers",
                        to="students.estudiante",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        limit_choices_to={"role": "teacher"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supervised_students",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Estudiante Supervisado",
                "verbose_name_plural": "Estudiantes Supervisados",
                "db_table": "teacher_students",
                "ordering": ["-created_at"],
                "unique_together": {("teacher", "student")},
            },
        ),
        migrations.CreateModel(
            name="TeacherProject",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("supervisor", "Supervisor Principal"),
                            ("co_supervisor", "Co-Supervisor"),
                            ("evaluator", "Evaluador"),
                            ("advisor", "Asesor"),
                        ],
                        default="supervisor",
                        max_length=20,
                    ),
                ),
                (
                    "current_phase",
                    models.CharField(
                        choices=[
                            ("planning", "Planificación"),
                            ("development", "Desarrollo"),
                            ("testing", "Pruebas"),
                            ("deployment", "Despliegue"),
                            ("maintenance", "Mantenimiento"),
                            ("completed", "Completado"),
                        ],
                        default="planning",
                        max_length=20,
                    ),
                ),
                ("assigned_date", models.DateField(auto_now_add=True)),
                ("last_review_date", models.DateField(blank=True, null=True)),
                ("next_review_date", models.DateField(blank=True, null=True)),
                ("review_count", models.PositiveIntegerField(default=0)),
                ("feedback_count", models.PositiveIntegerField(default=0)),
                (
                    "hours_supervised",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=8,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("supervision_notes", models.TextField(blank=True, null=True)),
                ("evaluation_criteria", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supervising_teachers",
                        to="projects.proyecto",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        limit_choices_to={"role": "teacher"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supervised_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Proyecto Supervisado",
                "verbose_name_plural": "Proyectos Supervisados",
                "db_table": "teacher_projects",
                "ordering": ["-assigned_date"],
                "unique_together": {("teacher", "project")},
            },
        ),
    ]
