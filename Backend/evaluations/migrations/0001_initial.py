# Generated by Django 4.2.7 on 2025-08-19 03:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("companies", "0001_initial"),
        ("projects", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("students", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="StudentPortfolio",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("project_url", models.URLField(blank=True, null=True)),
                ("github_url", models.URLField(blank=True, null=True)),
                ("technologies", models.TextField(default="[]")),
                ("images", models.TextField(default="[]")),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolio_items",
                        to="students.estudiante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Proyecto de Portafolio",
                "verbose_name_plural": "Proyectos de Portafolio",
                "db_table": "student_portfolio",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StudentAchievement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "achievement_type",
                    models.CharField(
                        choices=[
                            ("certification", "Certificación"),
                            ("award", "Premio"),
                            ("competition", "Competencia"),
                            ("publication", "Publicación"),
                            ("patent", "Patente"),
                            ("other", "Otro"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                ("issuer", models.CharField(max_length=200)),
                ("issue_date", models.DateField()),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("certificate_url", models.URLField(blank=True, null=True)),
                ("badge_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to="students.estudiante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Logro del Estudiante",
                "verbose_name_plural": "Logros de Estudiantes",
                "db_table": "student_achievements",
                "ordering": ["-issue_date"],
            },
        ),
        migrations.CreateModel(
            name="StudentSkill",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("skill_name", models.CharField(max_length=100)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("beginner", "Principiante"),
                            ("intermediate", "Intermedio"),
                            ("advanced", "Avanzado"),
                            ("expert", "Experto"),
                        ],
                        default="beginner",
                        max_length=20,
                    ),
                ),
                ("years_experience", models.PositiveIntegerField(default=0)),
                ("is_verified", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skill_records",
                        to="students.estudiante",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_skills",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Habilidad del Estudiante",
                "verbose_name_plural": "Habilidades de Estudiantes",
                "db_table": "student_skills",
                "ordering": ["skill_name"],
                "unique_together": {("student", "skill_name")},
            },
        ),
        migrations.CreateModel(
            name="Evaluation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "evaluation_type",
                    models.CharField(
                        choices=[
                            ("company_to_student", "Empresa a Estudiante"),
                            ("student_to_company", "Estudiante a Empresa"),
                        ],
                        default="company_to_student",
                        help_text="Dirección de la evaluación",
                        max_length=25,
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("evaluation_date", models.DateField(auto_now_add=True)),
                (
                    "criteria_scores",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Puntajes por criterio específico",
                    ),
                ),
                (
                    "evaluator_role",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("date", models.DateField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("completed", "Completada"),
                            ("flagged", "Marcada"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("intermediate", "Intermedia"), ("final", "Final")],
                        default="final",
                        max_length=20,
                    ),
                ),
                (
                    "overall_rating",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "strengths",
                    models.TextField(
                        blank=True,
                        help_text="Fortalezas (separadas por coma)",
                        null=True,
                    ),
                ),
                (
                    "areas_for_improvement",
                    models.TextField(
                        blank=True,
                        help_text="Áreas de mejora (separadas por coma)",
                        null=True,
                    ),
                ),
                (
                    "project_duration",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "technologies",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "deliverables",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations",
                        to="companies.empresa",
                    ),
                ),
                (
                    "evaluator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations_done",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations",
                        to="projects.proyecto",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations_received",
                        to="students.estudiante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evaluación",
                "verbose_name_plural": "Evaluaciones",
                "ordering": ["-date", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["evaluation_type", "status"],
                        name="evaluations_evaluat_cbfd79_idx",
                    ),
                    models.Index(
                        fields=["student", "evaluation_type"],
                        name="evaluations_student_3db903_idx",
                    ),
                    models.Index(
                        fields=["company", "evaluation_type"],
                        name="evaluations_company_c70d5c_idx",
                    ),
                ],
            },
        ),
    ]
