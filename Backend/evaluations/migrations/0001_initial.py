# Generated by Django 3.2.23 on 2025-06-22 05:50

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('technical', 'Habilidades Técnicas'), ('soft_skills', 'Habilidades Blandas'), ('punctuality', 'Puntualidad'), ('teamwork', 'Trabajo en Equipo'), ('communication', 'Comunicación'), ('problem_solving', 'Resolución de Problemas'), ('leadership', 'Liderazgo'), ('creativity', 'Creatividad'), ('overall', 'Evaluación General')], max_length=20)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evaluation_date', models.DateField()),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Evaluación',
                'verbose_name_plural': 'Evaluaciones',
                'db_table': 'evaluations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EvaluationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('categories', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plantilla de Evaluación',
                'verbose_name_plural': 'Plantillas de Evaluación',
                'db_table': 'evaluation_templates',
            },
        ),
        migrations.CreateModel(
            name='StudentAchievement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('certification', 'Certificación'), ('award', 'Premio'), ('competition', 'Competencia'), ('publication', 'Publicación'), ('patent', 'Patente'), ('other', 'Otro')], max_length=20)),
                ('issuer', models.CharField(max_length=200)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('certificate_url', models.URLField(blank=True, null=True)),
                ('badge_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Logro del Estudiante',
                'verbose_name_plural': 'Logros de Estudiantes',
                'db_table': 'student_achievements',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentPortfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('project_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('technologies', models.JSONField(default=list)),
                ('images', models.JSONField(default=list)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Proyecto de Portafolio',
                'verbose_name_plural': 'Proyectos de Portafolio',
                'db_table': 'student_portfolio',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentSkill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('skill_name', models.CharField(max_length=100)),
                ('level', models.CharField(choices=[('beginner', 'Principiante'), ('intermediate', 'Intermedio'), ('advanced', 'Avanzado'), ('expert', 'Experto')], default='beginner', max_length=20)),
                ('years_experience', models.PositiveIntegerField(default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Habilidad del Estudiante',
                'verbose_name_plural': 'Habilidades de Estudiantes',
                'db_table': 'student_skills',
                'ordering': ['skill_name'],
            },
        ),
    ]
