# Generated by Django 4.2.23 on 2025-07-02 01:37

import django.core.validators
from django.db import migrations, models


def create_initial_trl_levels(apps, schema_editor):
    """Crear los niveles TRL iniciales"""
    TRLLevel = apps.get_model('trl_levels', 'TRLLevel')
    
    # Niveles TRL
    trl_levels = [
        {
            'level': 1,
            'name': 'TRL 1 - Principios básicos observados',
            'description': 'Fase de idea, sin definición clara ni desarrollo previo. Investigación científica básica.',
            'min_hours': 20
        },
        {
            'level': 2,
            'name': 'TRL 2 - Concepto tecnológico formulado',
            'description': 'Definición clara y antecedentes de lo que se desea desarrollar. Investigación aplicada.',
            'min_hours': 20
        },
        {
            'level': 3,
            'name': 'TRL 3 - Prueba de concepto analítica y experimental',
            'description': 'Pruebas y validaciones de concepto. Componentes evaluados por separado.',
            'min_hours': 40
        },
        {
            'level': 4,
            'name': 'TRL 4 - Validación en laboratorio',
            'description': 'Prototipo mínimo viable probado en condiciones controladas simples.',
            'min_hours': 40
        },
        {
            'level': 5,
            'name': 'TRL 5 - Validación en entorno relevante',
            'description': 'Prototipo mínimo viable probado en condiciones similares al entorno real.',
            'min_hours': 80
        },
        {
            'level': 6,
            'name': 'TRL 6 - Demostración en entorno relevante',
            'description': 'Prototipo probado mediante un piloto en condiciones reales.',
            'min_hours': 80
        },
        {
            'level': 7,
            'name': 'TRL 7 - Demostración en entorno operativo',
            'description': 'Desarrollo probado en condiciones reales, por un periodo prolongado.',
            'min_hours': 160
        },
        {
            'level': 8,
            'name': 'TRL 8 - Sistema completo y calificado',
            'description': 'Producto validado en lo técnico y lo comercial.',
            'min_hours': 160
        },
        {
            'level': 9,
            'name': 'TRL 9 - Sistema probado en operación exitosa',
            'description': 'Producto completamente desarrollado y disponible para la sociedad.',
            'min_hours': 160
        }
    ]
    
    for trl_data in trl_levels:
        TRLLevel.objects.create(**trl_data)


def reverse_create_initial_trl_levels(apps, schema_editor):
    """Eliminar los niveles TRL iniciales"""
    TRLLevel = apps.get_model('trl_levels', 'TRLLevel')
    TRLLevel.objects.all().delete()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TRLLevel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('level', models.IntegerField(help_text='Nivel TRL del 1 al 9', unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)])),
                ('name', models.CharField(help_text='Nombre del nivel TRL', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Descripción detallada del nivel', null=True)),
                ('min_hours', models.IntegerField(help_text='Horas mínimas requeridas para este nivel')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Nivel TRL',
                'verbose_name_plural': 'Niveles TRL',
                'db_table': 'trl_levels',
                'ordering': ['level'],
            },
        ),
        # Agregar los datos iniciales
        migrations.RunPython(create_initial_trl_levels, reverse_create_initial_trl_levels),
    ]
