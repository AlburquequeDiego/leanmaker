# Generated by Django 4.2.7 on 2025-08-19 03:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("companies", "0001_initial"),
        ("areas", "0001_initial"),
        ("project_status", "0001_initial"),
        ("trl_levels", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Proyecto",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("requirements", models.TextField()),
                (
                    "tipo",
                    models.CharField(
                        blank=True,
                        help_text="Tipo de actividad del proyecto",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "objetivo",
                    models.TextField(
                        blank=True, help_text="Objetivo del proyecto", null=True
                    ),
                ),
                (
                    "encargado",
                    models.CharField(
                        blank=True,
                        help_text="Responsable del proyecto de la empresa",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "contacto",
                    models.CharField(
                        blank=True,
                        help_text="Contacto de la empresa",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "api_level",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(4),
                        ],
                    ),
                ),
                (
                    "required_hours",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "min_api_level",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(4),
                        ],
                    ),
                ),
                ("max_students", models.IntegerField(default=1)),
                ("current_students", models.IntegerField(default=0)),
                ("duration_weeks", models.IntegerField(default=12)),
                ("hours_per_week", models.IntegerField(default=20)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("estimated_end_date", models.DateField(blank=True, null=True)),
                ("real_end_date", models.DateField(blank=True, null=True)),
                ("application_deadline", models.DateField(blank=True, null=True)),
                (
                    "modality",
                    models.CharField(
                        choices=[
                            ("remote", "Remoto"),
                            ("onsite", "Presencial"),
                            ("hybrid", "Híbrido"),
                        ],
                        default="remote",
                        max_length=20,
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=200, null=True)),
                ("required_skills", models.TextField(blank=True, null=True)),
                ("preferred_skills", models.TextField(blank=True, null=True)),
                ("tags", models.TextField(blank=True, null=True)),
                ("technologies", models.TextField(blank=True, null=True)),
                ("benefits", models.TextField(blank=True, null=True)),
                ("applications_count", models.IntegerField(default=0)),
                ("views_count", models.IntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_urgent", models.BooleanField(default=False)),
                (
                    "is_project_completion",
                    models.BooleanField(
                        default=False, help_text="Indica si el proyecto está completado"
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "area",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="proyectos",
                        to="areas.area",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proyectos",
                        to="companies.empresa",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="proyectos",
                        to="project_status.projectstatus",
                    ),
                ),
                (
                    "trl",
                    models.ForeignKey(
                        blank=True,
                        help_text="Nivel TRL del proyecto (obligatorio)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="proyectos",
                        to="trl_levels.trllevel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Proyecto",
                "verbose_name_plural": "Proyectos",
                "db_table": "projects",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="HistorialEstadosProyecto",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("fecha_cambio", models.DateTimeField(auto_now_add=True)),
                ("comentario", models.TextField(blank=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historial_estados",
                        to="projects.proyecto",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historial_cambios",
                        to="project_status.projectstatus",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cambios_estado_proyecto",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Historial de Estado de Proyecto",
                "verbose_name_plural": "Historial de Estados de Proyectos",
                "db_table": "project_status_changes",
                "ordering": ["-fecha_cambio"],
            },
        ),
        migrations.CreateModel(
            name="MiembroProyecto",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            ("estudiante", "Estudiante"),
                            ("mentor", "Mentor"),
                            ("supervisor", "Supervisor"),
                            ("coordinador", "Coordinador"),
                        ],
                        default="estudiante",
                        max_length=20,
                    ),
                ),
                ("fecha_ingreso", models.DateTimeField(auto_now_add=True)),
                ("fecha_salida", models.DateTimeField(blank=True, null=True)),
                ("horas_trabajadas", models.PositiveIntegerField(default=0)),
                ("tareas_completadas", models.PositiveIntegerField(default=0)),
                (
                    "evaluacion_promedio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                ("esta_activo", models.BooleanField(default=True)),
                ("es_verificado", models.BooleanField(default=False)),
                ("responsabilidades", models.TextField(blank=True, null=True)),
                ("notas", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "proyecto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="miembros",
                        to="projects.proyecto",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="membresias_proyecto",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Miembro del Proyecto",
                "verbose_name_plural": "Miembros del Proyecto",
                "db_table": "project_members",
                "unique_together": {("proyecto", "usuario")},
            },
        ),
        migrations.CreateModel(
            name="AplicacionProyecto",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("cover_letter", models.TextField()),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("reviewing", "En Revisión"),
                            ("interviewed", "Entrevistado"),
                            ("accepted", "Aceptado"),
                            ("rejected", "Rechazado"),
                            ("withdrawn", "Retirado"),
                            ("completed", "Completado"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                ("company_notes", models.TextField(blank=True, null=True)),
                ("student_notes", models.TextField(blank=True, null=True)),
                ("portfolio_url", models.URLField(blank=True, null=True)),
                ("github_url", models.URLField(blank=True, null=True)),
                ("linkedin_url", models.URLField(blank=True, null=True)),
                ("fecha_aplicacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_revision", models.DateTimeField(blank=True, null=True)),
                ("fecha_respuesta", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "estudiante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aplicaciones_estudiante",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "proyecto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_applications",
                        to="projects.proyecto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Aplicación a Proyecto",
                "verbose_name_plural": "Aplicaciones a Proyectos",
                "db_table": "project_applications",
                "ordering": ["-fecha_aplicacion"],
                "unique_together": {("proyecto", "estudiante")},
            },
        ),
    ]
